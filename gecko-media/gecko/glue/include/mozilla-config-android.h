/* List of defines generated by configure. Included with preprocessor flag,
 * -include, to avoid long list of -D defines on the compile command-line.
 * Do not edit.
 */

#ifndef MOZILLA_CONFIG_H
#define MOZILLA_CONFIG_H

#if defined(__clang__)
#pragma clang diagnostic push
#if __has_warning("-Wreserved-id-macro")
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#endif

/* Expands to all the defines from configure. */
#define A11Y_LOG 1
#define ACCESSIBILITY 1
#define ANDROID 1
#define BUILD_ARM_NEON 1
#define BUILD_CTYPES 1
#define CROSS_COMPILE 1
#define D_INO d_ino
#define EARLY_BETA_OR_EARLIER 1
#define ENABLE_INTL_API 1
#define ENABLE_SYSTEM_EXTENSION_DIRS 1
#define ENABLE_TESTS 1
#define EXPOSE_INTL_API 1
#define FIREFOX_VERSION 59.0a1
#define FORCE_PR_LOG 1
#define GTEST_HAS_CLONE 0
#define GTEST_HAS_RTTI 0
#define GTEST_OS_LINUX_ANDROID 1
#define GTEST_USE_OWN_TR1_TUPLE 1
#define HAVE_ALLOCA_H 1
#define HAVE_ARC4RANDOM 1
#define HAVE_ARC4RANDOM_BUF 1
#define HAVE_ARM_NEON 1
#define HAVE_ARM_SIMD 1
#define HAVE_BYTESWAP_H 1
#define HAVE_CLOCK_MONOTONIC 1
#define HAVE_DIRENT_H 1
#define HAVE_DLADDR 1
#define HAVE_DLOPEN 1
#define HAVE_FT_BITMAP_SIZE_Y_PPEM 1
#define HAVE_FT_GLYPHSLOT_EMBOLDEN 1
#define HAVE_FT_LOAD_SFNT_TABLE 1
#define HAVE_GETOPT_H 1
#define HAVE_GETTID 1
#define HAVE_GMTIME_R 1
#define HAVE_I18N_LC_MESSAGES 1
#define HAVE_INTTYPES_H 1
#define HAVE_LCHOWN 1
#define HAVE_LINUX_IF_ADDR_H 1
#define HAVE_LINUX_PERF_EVENT_H 1
#define HAVE_LINUX_QUOTA_H 1
#define HAVE_LINUX_RTNETLINK_H 1
#define HAVE_LOCALTIME_R 1
#define HAVE_MALLINFO 1
#define HAVE_MALLOC_H 1
#define HAVE_MEMALIGN 1
#define HAVE_MEMMEM 1
#define HAVE_NETINET_IN_H 1
#define HAVE_NL_TYPES_H 1
#define HAVE_PTHREAD_COND_TIMEDWAIT_MONOTONIC 1
#define HAVE_PTHREAD_H 1
#define HAVE_SETPRIORITY 1
#define HAVE_STDINT_H 1
#define HAVE_STRERROR 1
#define HAVE_STRNDUP 1
#define HAVE_SYSCALL 1
#define HAVE_SYS_QUEUE_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_UNISTD_H 1
#define HAVE_VALLOC 1
#define HAVE_VA_COPY 1
#define HAVE_VISIBILITY_ATTRIBUTE 1
#define HAVE_VISIBILITY_HIDDEN_ATTRIBUTE 1
#define HAVE__UNWIND_BACKTRACE 1
#define JS_DEFAULT_JITREPORT_GRANULARITY 3
#define MALLOC_H <malloc.h>
#define MALLOC_USABLE_SIZE_CONST_PTR const
#define MOZILLA_UAVERSION "59.0"
#define MOZILLA_VERSION "59.0a1"
#define MOZILLA_VERSION_U 59.0a1
#define MOZ_ADDON_SIGNING 1
#define MOZ_ALLOW_LEGACY_EXTENSIONS 1
#define MOZ_ANDROID_HISTORY 1
#define MOZ_APP_UA_NAME "Firefox"
#define MOZ_APP_UA_VERSION "59.0a1"
#define MOZ_BUILD_APP mobile/android
#define MOZ_BUILD_WEBRENDER 1
#define MOZ_DATA_REPORTING 1
#define MOZ_DEBUG 1
#define MOZ_DEBUG_RUST 1
#define MOZ_DISTRIBUTION_ID "org.mozilla"
#define MOZ_DLL_SUFFIX ".so"
#define MOZ_DUMP_PAINTING 1
#define MOZ_ENABLE_SKIA 1
#define MOZ_ENABLE_SKIA_PDF 1
#define MOZ_ENABLE_SKIA_PDF_SFNTLY 1
#define MOZ_FEEDS 1
#define MOZ_FFVPX 1
#define MOZ_FFVPX_FLACONLY 1
#define MOZ_FMP4 1
#define MOZ_GECKO_PROFILER 1
#define MOZ_GFX_OPTIMIZE_MOBILE 1
#define MOZ_IGNORE_PAINT_WILL_RESAMPLE 1
#define MOZ_INSTRUMENT_EVENT_LOOP 1
#define MOZ_LINKER 1
#define MOZ_LOGGING 1
#define MOZ_MACBUNDLE_ID org.mozilla.fennec phildebug
#define MOZ_MEMORY 1
#define MOZ_NO_SMART_CARDS 1
#define MOZ_PEERCONNECTION 1
#define MOZ_PERMISSIONS 1
#define MOZ_PROFILING 1
#define MOZ_RAW 1
#define MOZ_REFLOW_PERF 1
#define MOZ_REFLOW_PERF_DSP 1
#define MOZ_REPLACE_MALLOC 1
#define MOZ_SAMPLE_TYPE_S16 1
#define MOZ_SCTP 1
#define MOZ_SECUREELEMENT 1
#define MOZ_SERVICES_HEALTHREPORT 1
#define MOZ_SRTP 1
#define MOZ_STATIC_JS 1
#define MOZ_STYLO 1
#define MOZ_STYLO_ENABLE 1
#define MOZ_THUMB2 1
#define MOZ_TREE_CAIRO 1
#define MOZ_TREE_FREETYPE 1
#define MOZ_TREE_PIXMAN 1
#define MOZ_TREMOR 1
#define MOZ_UPDATE_CHANNEL default
#define MOZ_USER_DIR ".mozilla"
#define MOZ_USE_NATIVE_POPUP_WINDOWS 1
#define MOZ_VPX_NO_MEM_REPORTING 1
#define MOZ_WEBM_ENCODER 1
#define MOZ_WEBRTC 1
#define MOZ_WEBRTC_ASSERT_ALWAYS 1
#define MOZ_WEBRTC_SIGNALING 1
#define MOZ_WEBSPEECH 1
#define MOZ_WEBSPEECH_TEST_BACKEND 1
#define MOZ_WIDGET_ANDROID 1
#define MOZ_XUL 1
#define NIGHTLY_BUILD 1
#define NO_NSPR_10_SUPPORT 1
#define NO_PW_GECOS 1
#define NS_PRINTING 1
#define NS_PRINT_PREVIEW 1
#define SK_BUILD_FOR_ANDROID_NDK 1
#define STATIC_JS_API 1
#define STDC_HEADERS 1
#define TARGET_XPCOM_ABI "arm-eabi-gcc3"
#define USE_SKIA 1
#define USE_SKIA_GPU 1
#define U_STATIC_IMPLEMENTATION 1
#define U_USING_ICU_NAMESPACE 0
#define VA_COPY va_copy
#define VPX_ARM_ASM 1
#define XP_LINUX 1
#define XP_UNIX 1
#define X_DISPLAY_MISSING 1
#define ZLIB_IN_MOZGLUE 1
#define _LIBCPP_ALWAYS_INLINE 
#define _LIBCPP_ALWAYS_INLINE_EXCEPT_GCC49 
#define _LIBCPP_INLINE_VISIBILITY 
#define _LIBCPP_INLINE_VISIBILITY_EXCEPT_GCC49 
#define _REENTRANT 1

/*
 * The c99 defining the limit macros (UINT32_MAX for example), says:
 *
 *   C++ implementations should define these macros only when
 *   __STDC_LIMIT_MACROS is defined before <stdint.h> is included.
 *
 * The same also occurs with __STDC_CONSTANT_MACROS for the constant macros
 * (INT8_C for example) used to specify a literal constant of the proper type,
 * and with __STDC_FORMAT_MACROS for the format macros (PRId32 for example) used
 * with the fprintf function family.
 */
#define __STDC_LIMIT_MACROS
#define __STDC_CONSTANT_MACROS
#if !defined(__STDC_FORMAT_MACROS)
#define __STDC_FORMAT_MACROS
#endif

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

/*
 * Force-include Char16.h in order to define PRUnichar as char16_t everywhere.
 * Note that this should be the first #include to make sure that prtypes.h does
 * not attempt to define PRUnichar.  This includes the following hunspell-specific
 * includes.
 */
#if !defined(__ASSEMBLER__)
#include "mozilla/Char16.h"
#endif

/*
 * Force-include hunspell_alloc_hooks.h and hunspell_fopen_hooks.h for hunspell,
 * so that we don't need to modify them directly.
 *
 * HUNSPELL_STATIC is defined in extensions/spellcheck/hunspell/src/Makefile.in,
 * unless --enable-system-hunspell is defined.
 */
#if defined(HUNSPELL_STATIC)
#include "hunspell_alloc_hooks.h"
#include "hunspell_fopen_hooks.h"
#endif

/*
 * Force-include sdkdecls.h for building the chromium sandbox code.
 *
 * CHROMIUM_SANDBOX_BUILD is defined in security/sandbox/moz.build.
 * Note that this include path relies on the LOCAL_INCLUDES in that file.
 */
#if defined(CHROMIUM_SANDBOX_BUILD) && defined(XP_WIN)
#include "base/win/sdkdecls.h"
#endif

#endif /* MOZILLA_CONFIG_H */
